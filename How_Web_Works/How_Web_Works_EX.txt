* What is HTTP?

HTTP stands for Hyper Text Transfer Protocol. It is the foundation as to how clients get data from, or send data to a server.

* What is a URL?

URL is short for Uniform Resource Locator. This is an address for some internet resource on the web.

* What is DNS?

DNS is short for Domain Name System. This is a system like a phonebook for the internet that takes human-readable URLs(websites) and converts them into IP addresses.

* What is a query string?

The query string allows you to pass key-value pairs into the URL, in the format ?key1=value1&key2=value2...

* List two HTTP Verbs and their use cases.

GET - get some data from the server (most pages, search forms)
POST - send some data to the server (pages that change/create or update a resource on a server).
* What is an HTTP request?

An HTTP request is a request from a client to a server which follows the HTTP protocol (EX a request for HTML from reddit.com/r/popular)

* What is an HTTP response?

An HTTP response is a response from a server to a client which follows the HTTP protocol (eg sending back HTML/CSS/JS/etc)

* What is an HTTP header? Give a couple examples of request and response headers you have seen.

Headers provide additional information about the request or the response. 
Examples:
Request headers: Host, User-Agent, Accept, Cookie, Connection, Authorization, Cache-Control
Response headers: Content-Encoding, Content-Type, Last-Modified, Server, Set-Cookie, Cache-Control

* What happens when you type a URL in a browser?

1. Your browser "looks up" the name into an IP address for site or domain name using DNS
2. Your browser makes a request to that IP address, including headers (info about browser, any previous cookies, and other things)
3. The server sends back a response (typically, HTML, with a status code (200 if it was sucessful)
4. The browser makes a DOM from that HTML, and finds any other resources needed (images, CSS, JavaScript, etc) then repeats steps 2-4
5. Once the page is loaded the browser makes separate HTTP requests for those resources and receives response from the server for each as needed.